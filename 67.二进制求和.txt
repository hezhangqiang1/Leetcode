class Solution {
    public String AddBinary(String a, String b) {
         StringBuilder sb = new StringBuilder();
        int i = a.Length - 1, j = b.Length - 1, carry = 0;
        while (i >= 0 || j >= 0)
        {
            int sum = carry;
            if (j >= 0) sum += b[j--] - '0';
            if (i >= 0) sum += a[i--] - '0';
            sb.Insert(0,sum % 2);
            carry = sum / 2;
        }
        if (carry != 0) sb.Insert(0,carry);
        return sb.ToString();

    }  
}
执行比较快的实例：
  public class Solution
    {
        public string AddBinary(string a, string b)
        {
            var jinzhi = 2;
            var n1 = a.Length;
            var n2 = b.Length;
            var i = 0;
            var sum = "";
            var n = n1 > n2 ? n1 : n2;
            var c = 0;
            while (i < n - n1)
            {
                a = "0" + a;
                i += 1;
            }
            while (i < n - n2)
            {
                b = "0" + b;
                i += 1;
            }
            i = n - 1;
            while (i >= 0)
            {
                var r = (a[i] - '0') + (b[i] - '0') + c;
                c = r / jinzhi;
                r = r % jinzhi;
                sum = r.ToString() + sum;
                i -= 1;
            }
            if (c == 1)
                sum = "1" + sum;
            return sum;
        }
    }